// <auto-generated />
using System;
using AgriculturePresentationApp.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgriculturePresentationApp.DataAccess.Migrations
{
    [DbContext(typeof(AgriculturePresentationAppDbContext))]
    partial class AgriculturePresentationAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AgriculturePresentationApp.Entities.Entities.Concrete.About", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AboutHistory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AboutUs")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abouts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AboutHistory = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Totam atque cum alias iure in nulla ex, repellendus corrupti tempora voluptatem!",
                            AboutUs = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus repudiandae ipsam numquam consectetur harum natus."
                        });
                });

            modelBuilder.Entity("AgriculturePresentationApp.Entities.Entities.Concrete.Adress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MapInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description1 = "Güneş Mh. Yıldız Cd. No:22",
                            Description2 = "agriculture@gmail.com",
                            Description3 = "Kızılay Ankara",
                            Description4 = "0 530 000 00 00",
                            MapInfo = "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d5296.639074635017!2d32.83117527991754!3d39.92476403024208!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x14d34f190a9cea8f%3A0xd3862ea8248d08a0!2sAn%C4%B1tkabir!5e0!3m2!1str!2str!4v1692655486283!5m2!1str!2str"
                        });
                });

            modelBuilder.Entity("AgriculturePresentationApp.Entities.Entities.Concrete.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Announcements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 8, 22, 19, 56, 51, 37, DateTimeKind.Local).AddTicks(4335),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus repudiandae ipsam numquam consectetur harum natus.",
                            Status = true,
                            Title = "Lorem ipsum"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 8, 22, 19, 56, 51, 37, DateTimeKind.Local).AddTicks(4345),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus repudiandae ipsam numquam consectetur harum natus.",
                            Status = true,
                            Title = "Lorem ipsum"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 8, 22, 19, 56, 51, 37, DateTimeKind.Local).AddTicks(4346),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus repudiandae ipsam numquam consectetur harum natus.",
                            Status = true,
                            Title = "Lorem ipsum"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 8, 22, 19, 56, 51, 37, DateTimeKind.Local).AddTicks(4347),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus repudiandae ipsam numquam consectetur harum natus.",
                            Status = true,
                            Title = "Lorem ipsum"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2023, 8, 22, 19, 56, 51, 37, DateTimeKind.Local).AddTicks(4348),
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit. Possimus repudiandae ipsam numquam consectetur harum natus.",
                            Status = true,
                            Title = "Lorem ipsum"
                        });
                });

            modelBuilder.Entity("AgriculturePresentationApp.Entities.Entities.Concrete.ApplicationAdmin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "9588b738-b7c2-4dab-96f7-5ccedde5be23",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "acbbbee1-c9e7-446b-958d-809fff51700a",
                            Email = "admin@admin.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            NormalizedUserName = "ADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEJM76s/Hl1+6+Czt+obssWHnpudhUGuwHec8Wupi5cVo5NveoGDjqtqnZzCJzVuP6Q==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "78aa7628-96c4-43ce-93f8-9453ab83761d",
                            TwoFactorEnabled = false,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("AgriculturePresentationApp.Entities.Entities.Concrete.Assistance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Assistances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
                            Image = "61e99665-5c2c-4178-b9ab-d8aefe5bd16f_g6.jpg",
                            Title = "Lorem Ipsum"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
                            Image = "66205b35-f8e9-4ed9-a134-71536c61eada_g7.jpg",
                            Title = "Lorem Ipsum"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
                            Image = "a6185f8f-47fc-429f-8efb-9cb2a3137b5b_b3.jpg",
                            Title = "Lorem Ipsum"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
                            Image = "fa5e16f2-4a50-4bd0-ae7e-c8060ad4dedf_g5.jpg",
                            Title = "Lorem Ipsum"
                        });
                });

            modelBuilder.Entity("AgriculturePresentationApp.Entities.Entities.Concrete.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 8, 22, 19, 56, 51, 37, DateTimeKind.Local).AddTicks(4590),
                            Mail = "lorem@lorem.com",
                            Message = "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
                            Name = "Lorem Ipsum1"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 8, 22, 19, 56, 51, 37, DateTimeKind.Local).AddTicks(4592),
                            Mail = "lorem@lorem.com",
                            Message = "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
                            Name = "Lorem Ipsum2"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2023, 8, 22, 19, 56, 51, 37, DateTimeKind.Local).AddTicks(4593),
                            Mail = "lorem@lorem.com",
                            Message = "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
                            Name = "Lorem Ipsum3"
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 8, 22, 19, 56, 51, 37, DateTimeKind.Local).AddTicks(4594),
                            Mail = "lorem@lorem.com",
                            Message = "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
                            Name = "Lorem Ipsum4"
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2023, 8, 22, 19, 56, 51, 37, DateTimeKind.Local).AddTicks(4595),
                            Mail = "lorem@lorem.com",
                            Message = "Lorem ipsum dolor sit amet consectetur adipisicing elit.",
                            Name = "Lorem Ipsum5"
                        });
                });

            modelBuilder.Entity("AgriculturePresentationApp.Entities.Entities.Concrete.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum dolor sit amet.",
                            ImageUrl = "68deb826-4868-458f-977f-dfaec3238a3d_cay.jpg",
                            Title = "Lorem Ipsum"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Lorem ipsum dolor sit amet.",
                            ImageUrl = "5fbf8f44-3739-46fc-9aa7-54cf1f7f5acd_bugday.jpg",
                            Title = "Lorem Ipsum"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Lorem ipsum dolor sit amet.",
                            ImageUrl = "7f388cd2-20f0-4b32-aebb-f39934edea09_b3.jpg",
                            Title = "Lorem Ipsum"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Lorem ipsum dolor sit amet.",
                            ImageUrl = "758ae01c-eb97-4396-8cf2-01da83533f42_g7.jpg",
                            Title = "Lorem Ipsum"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Lorem ipsum dolor sit amet.",
                            ImageUrl = "260b6184-3906-4712-8027-57a35540e64b_g9.jpg",
                            Title = "Lorem Ipsum"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Lorem ipsum dolor sit amet.",
                            ImageUrl = "1194798b-c2a3-4990-a489-87ca02088485_g1.jpg",
                            Title = "Lorem Ipsum"
                        });
                });

            modelBuilder.Entity("AgriculturePresentationApp.Entities.Entities.Concrete.SocialMedia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialMedias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Icon = "fa fa-facebook",
                            Title = "facebook",
                            Url = "https://facebook.com"
                        },
                        new
                        {
                            Id = 2,
                            Icon = "fa fa-twitter",
                            Title = "twitter",
                            Url = "https://facebook.com"
                        },
                        new
                        {
                            Id = 3,
                            Icon = "fa fa-linkedin",
                            Title = "linkedin",
                            Url = "https://facebook.com"
                        },
                        new
                        {
                            Id = 4,
                            Icon = "fa fa-youtube",
                            Title = "youtube",
                            Url = "https://facebook.com"
                        });
                });

            modelBuilder.Entity("AgriculturePresentationApp.Entities.Entities.Concrete.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FacebookUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstagramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TwitterUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSiteUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FacebookUrl = "#",
                            FullName = "Lorem Ipsum",
                            ImageUrl = "af4ceaf0-1434-4a02-8f62-55f8d512b561_t3.jpg",
                            InstagramUrl = "#",
                            Title = "Lorem",
                            TwitterUrl = "#",
                            WebSiteUrl = "#"
                        },
                        new
                        {
                            Id = 2,
                            FacebookUrl = "#",
                            FullName = "Lorem Ipsum",
                            ImageUrl = "32936630-f4fc-4972-91ea-d63dfa071104_t1.jpg",
                            InstagramUrl = "#",
                            Title = "Lorem",
                            TwitterUrl = "#",
                            WebSiteUrl = "#"
                        },
                        new
                        {
                            Id = 3,
                            FacebookUrl = "#",
                            FullName = "Lorem Ipsum",
                            ImageUrl = "ba08bcd5-193b-4e37-a943-a9db7905048c_t2.jpg",
                            InstagramUrl = "#",
                            Title = "Lorem",
                            TwitterUrl = "#",
                            WebSiteUrl = "#"
                        },
                        new
                        {
                            Id = 4,
                            FacebookUrl = "#",
                            FullName = "Lorem Ipsum",
                            ImageUrl = "d5648bb7-12d8-4af5-a5cd-a5de8111f7ed_t4.jpg",
                            InstagramUrl = "#",
                            Title = "Lorem",
                            TwitterUrl = "#",
                            WebSiteUrl = "#"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "d575f12c-a0d3-4ead-b94c-c0ee62ef7652",
                            ConcurrencyStamp = "0d25ad69-ef43-4e86-b2e2-09de0ff4e836",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "9588b738-b7c2-4dab-96f7-5ccedde5be23",
                            RoleId = "d575f12c-a0d3-4ead-b94c-c0ee62ef7652"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("AgriculturePresentationApp.Entities.Entities.Concrete.ApplicationAdmin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("AgriculturePresentationApp.Entities.Entities.Concrete.ApplicationAdmin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgriculturePresentationApp.Entities.Entities.Concrete.ApplicationAdmin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("AgriculturePresentationApp.Entities.Entities.Concrete.ApplicationAdmin", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
